# -*- coding: utf-8 -*-
from schemaorgschemas.Thing import potentialActionProp, descriptionProp, sameAsProp, imageProp, urlProp, additionalTypeProp, alternateNameProp, nameProp

from schemaorgschemas.djangoschema import SchemaObject, SchemaProperty, SchemaEnumProperty, SCHEMA_ORG
from django.conf import settings


class ServiceSchema(SchemaObject):

    """Schema Mixin for Service
    Usage: place after django model in class definition, schema will return the schema.org url for the object
    A service provided by an organization, e.g. delivery service, print services, etc.
    """

    def __init__(self):
        self.schema = 'Service'


class serviceAreaProp(SchemaProperty):

    """
    SchemaField for serviceArea
    Usage: Include in SchemaObject SchemaFields as your_django_field = serviceAreaProp()  
    schema.org description:The geographic area where the service is provided.

    prop_schema returns just the property without url#
    format_as is used by app templatetags based upon schema.org datatype
    used to reference AdministrativeArea"""

    _prop_schema = 'serviceArea'
    _expected_schema = 'AdministrativeArea'
    _enum = False
    _format_as = "ForeignKey"


class serviceTypeProp(SchemaProperty):

    """
    SchemaField for serviceType
    Usage: Include in SchemaObject SchemaFields as your_django_field = serviceTypeProp()  
    schema.org description:The type of service being offered, e.g. veterans&#39; benefits, emergency relief, etc.

    prop_schema returns just the property without url#
    format_as is used by app templatetags based upon schema.org datatype
    """

    _prop_schema = 'serviceType'
    _expected_schema = None
    _enum = False
    _format_as = "TextField"


class serviceAudienceProp(SchemaProperty):

    """
    SchemaField for serviceAudience
    Usage: Include in SchemaObject SchemaFields as your_django_field = serviceAudienceProp()  
    schema.org description:The audience eligible for this service.

    prop_schema returns just the property without url#
    format_as is used by app templatetags based upon schema.org datatype
    used to reference Audience"""

    _prop_schema = 'serviceAudience'
    _expected_schema = 'Audience'
    _enum = False
    _format_as = "ForeignKey"


class availableChannelProp(SchemaProperty):

    """
    SchemaField for availableChannel
    Usage: Include in SchemaObject SchemaFields as your_django_field = availableChannelProp()  
    schema.org description:A means of accessing the service (e.g. a phone bank, a web site, a location, etc.)

    prop_schema returns just the property without url#
    format_as is used by app templatetags based upon schema.org datatype
    used to reference ServiceChannel"""

    _prop_schema = 'availableChannel'
    _expected_schema = 'ServiceChannel'
    _enum = False
    _format_as = "ForeignKey"


class providerProp(SchemaProperty):

    """
    SchemaField for provider
    Usage: Include in SchemaObject SchemaFields as your_django_field = providerProp()  
    schema.org description:The organization or agency that is providing the service.

    prop_schema returns just the property without url#
    format_as is used by app templatetags based upon schema.org datatype
    used to reference Organization"""

    _prop_schema = 'provider'
    _expected_schema = 'Organization'
    _enum = False
    _format_as = "ForeignKey"


class producesProp(SchemaProperty):

    """
    SchemaField for produces
    Usage: Include in SchemaObject SchemaFields as your_django_field = producesProp()  
    schema.org description:The tangible thing generated by the service, e.g. a passport, permit, etc.

    prop_schema returns just the property without url#
    format_as is used by app templatetags based upon schema.org datatype
    used to reference Thing"""

    _prop_schema = 'produces'
    _expected_schema = 'Thing'
    _enum = False
    _format_as = "TextField"
